#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace demobtl
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Trachanhbuipho1")]
	public partial class TrachanhbuiphoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAN(BAN instance);
    partial void UpdateBAN(BAN instance);
    partial void DeleteBAN(BAN instance);
    partial void InsertCHAMCONG(CHAMCONG instance);
    partial void UpdateCHAMCONG(CHAMCONG instance);
    partial void DeleteCHAMCONG(CHAMCONG instance);
    partial void InsertCHITIETHOADON(CHITIETHOADON instance);
    partial void UpdateCHITIETHOADON(CHITIETHOADON instance);
    partial void DeleteCHITIETHOADON(CHITIETHOADON instance);
    partial void InsertDANHMUCMON(DANHMUCMON instance);
    partial void UpdateDANHMUCMON(DANHMUCMON instance);
    partial void DeleteDANHMUCMON(DANHMUCMON instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertMON(MON instance);
    partial void UpdateMON(MON instance);
    partial void DeleteMON(MON instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    #endregion
		
		public TrachanhbuiphoDataContext() : 
				base(global::demobtl.Properties.Settings.Default.Trachanhbuipho1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TrachanhbuiphoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TrachanhbuiphoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TrachanhbuiphoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TrachanhbuiphoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAN> BANs
		{
			get
			{
				return this.GetTable<BAN>();
			}
		}
		
		public System.Data.Linq.Table<CHAMCONG> CHAMCONGs
		{
			get
			{
				return this.GetTable<CHAMCONG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this.GetTable<CHITIETHOADON>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUCMON> DANHMUCMONs
		{
			get
			{
				return this.GetTable<DANHMUCMON>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<MON> MONs
		{
			get
			{
				return this.GetTable<MON>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Fn_Report", IsComposable=true)]
		public IQueryable<Fn_ReportResult> Fn_Report([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idbill)
		{
			return this.CreateMethodCallQuery<Fn_ReportResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idbill);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Fn_ThongKe", IsComposable=true)]
		public IQueryable<Fn_ThongKeResult> Fn_ThongKe([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dau, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> cuoi)
		{
			return this.CreateMethodCallQuery<Fn_ThongKeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dau, cuoi);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Fn_ThongKeLuong", IsComposable=true)]
		public IQueryable<Fn_ThongKeLuongResult> Fn_ThongKeLuong([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dau, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> cuoi)
		{
			return this.CreateMethodCallQuery<Fn_ThongKeLuongResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dau, cuoi);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Fn_TienChuaCK", IsComposable=true)]
		public System.Nullable<double> Fn_TienChuaCK([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idbll)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idbll).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAN")]
	public partial class BAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Ten_Ban;
		
		private bool _Trang_Thai;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTen_BanChanging(string value);
    partial void OnTen_BanChanged();
    partial void OnTrang_ThaiChanging(bool value);
    partial void OnTrang_ThaiChanged();
    #endregion
		
		public BAN()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Ten Ban]", Storage="_Ten_Ban", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Ten_Ban
		{
			get
			{
				return this._Ten_Ban;
			}
			set
			{
				if ((this._Ten_Ban != value))
				{
					this.OnTen_BanChanging(value);
					this.SendPropertyChanging();
					this._Ten_Ban = value;
					this.SendPropertyChanged("Ten_Ban");
					this.OnTen_BanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Trang Thai]", Storage="_Trang_Thai", DbType="Bit NOT NULL")]
		public bool Trang_Thai
		{
			get
			{
				return this._Trang_Thai;
			}
			set
			{
				if ((this._Trang_Thai != value))
				{
					this.OnTrang_ThaiChanging(value);
					this.SendPropertyChanging();
					this._Trang_Thai = value;
					this.SendPropertyChanged("Trang_Thai");
					this.OnTrang_ThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_HOADON", Storage="_HOADONs", ThisKey="ID", OtherKey="Ban")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.BAN1 = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.BAN1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHAMCONG")]
	public partial class CHAMCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Ngay;
		
		private int _ID_NV;
		
		private bool _Trang_Thai;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnID_NVChanging(int value);
    partial void OnID_NVChanged();
    partial void OnTrang_ThaiChanging(bool value);
    partial void OnTrang_ThaiChanged();
    #endregion
		
		public CHAMCONG()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ID NV]", Storage="_ID_NV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Trang Thai]", Storage="_Trang_Thai", DbType="Bit NOT NULL")]
		public bool Trang_Thai
		{
			get
			{
				return this._Trang_Thai;
			}
			set
			{
				if ((this._Trang_Thai != value))
				{
					this.OnTrang_ThaiChanging(value);
					this.SendPropertyChanging();
					this._Trang_Thai = value;
					this.SendPropertyChanged("Trang_Thai");
					this.OnTrang_ThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHAMCONG", Storage="_NHANVIEN", ThisKey="ID_NV", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CHAMCONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CHAMCONGs.Add(this);
						this._ID_NV = value.ID;
					}
					else
					{
						this._ID_NV = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHOADON")]
	public partial class CHITIETHOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Hoa_Don;
		
		private int _Mon;
		
		private System.Nullable<int> _So_Luong;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<MON> _MON1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHoa_DonChanging(int value);
    partial void OnHoa_DonChanged();
    partial void OnMonChanging(int value);
    partial void OnMonChanged();
    partial void OnSo_LuongChanging(System.Nullable<int> value);
    partial void OnSo_LuongChanged();
    #endregion
		
		public CHITIETHOADON()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._MON1 = default(EntityRef<MON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Hoa Don]", Storage="_Hoa_Don", DbType="Int NOT NULL")]
		public int Hoa_Don
		{
			get
			{
				return this._Hoa_Don;
			}
			set
			{
				if ((this._Hoa_Don != value))
				{
					this.OnHoa_DonChanging(value);
					this.SendPropertyChanging();
					this._Hoa_Don = value;
					this.SendPropertyChanged("Hoa_Don");
					this.OnHoa_DonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mon", DbType="Int NOT NULL")]
		public int Mon
		{
			get
			{
				return this._Mon;
			}
			set
			{
				if ((this._Mon != value))
				{
					if (this._MON1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonChanging(value);
					this.SendPropertyChanging();
					this._Mon = value;
					this.SendPropertyChanged("Mon");
					this.OnMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[So Luong]", Storage="_So_Luong", DbType="Int")]
		public System.Nullable<int> So_Luong
		{
			get
			{
				return this._So_Luong;
			}
			set
			{
				if ((this._So_Luong != value))
				{
					this.OnSo_LuongChanging(value);
					this.SendPropertyChanging();
					this._So_Luong = value;
					this.SendPropertyChanged("So_Luong");
					this.OnSo_LuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHOADON", Storage="_HOADON", ThisKey="Hoa_Don", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CHITIETHOADONs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONs.Add(this);
						this._Hoa_Don = value.ID;
					}
					else
					{
						this._Hoa_Don = default(int);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MON_CHITIETHOADON", Storage="_MON1", ThisKey="Mon", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MON MON1
		{
			get
			{
				return this._MON1.Entity;
			}
			set
			{
				MON previousValue = this._MON1.Entity;
				if (((previousValue != value) 
							|| (this._MON1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MON1.Entity = null;
						previousValue.CHITIETHOADONs.Remove(this);
					}
					this._MON1.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONs.Add(this);
						this._Mon = value.ID;
					}
					else
					{
						this._Mon = default(int);
					}
					this.SendPropertyChanged("MON1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUCMON")]
	public partial class DANHMUCMON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Danh_Muc;
		
		private EntitySet<MON> _MONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDanh_MucChanging(string value);
    partial void OnDanh_MucChanged();
    #endregion
		
		public DANHMUCMON()
		{
			this._MONs = new EntitySet<MON>(new Action<MON>(this.attach_MONs), new Action<MON>(this.detach_MONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Danh Muc]", Storage="_Danh_Muc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Danh_Muc
		{
			get
			{
				return this._Danh_Muc;
			}
			set
			{
				if ((this._Danh_Muc != value))
				{
					this.OnDanh_MucChanging(value);
					this.SendPropertyChanging();
					this._Danh_Muc = value;
					this.SendPropertyChanged("Danh_Muc");
					this.OnDanh_MucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUCMON_MON", Storage="_MONs", ThisKey="ID", OtherKey="Danh_Muc")]
		public EntitySet<MON> MONs
		{
			get
			{
				return this._MONs;
			}
			set
			{
				this._MONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MONs(MON entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUCMON = this;
		}
		
		private void detach_MONs(MON entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUCMON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Ngay;
		
		private string _Ten_Khach;
		
		private bool _Trang_Thai;
		
		private double _Chiet_Khau;
		
		private System.Nullable<int> _Ban;
		
		private EntitySet<CHITIETHOADON> _CHITIETHOADONs;
		
		private EntityRef<BAN> _BAN1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnTen_KhachChanging(string value);
    partial void OnTen_KhachChanged();
    partial void OnTrang_ThaiChanging(bool value);
    partial void OnTrang_ThaiChanged();
    partial void OnChiet_KhauChanging(double value);
    partial void OnChiet_KhauChanged();
    partial void OnBanChanging(System.Nullable<int> value);
    partial void OnBanChanged();
    #endregion
		
		public HOADON()
		{
			this._CHITIETHOADONs = new EntitySet<CHITIETHOADON>(new Action<CHITIETHOADON>(this.attach_CHITIETHOADONs), new Action<CHITIETHOADON>(this.detach_CHITIETHOADONs));
			this._BAN1 = default(EntityRef<BAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Ten Khach]", Storage="_Ten_Khach", DbType="NVarChar(50)")]
		public string Ten_Khach
		{
			get
			{
				return this._Ten_Khach;
			}
			set
			{
				if ((this._Ten_Khach != value))
				{
					this.OnTen_KhachChanging(value);
					this.SendPropertyChanging();
					this._Ten_Khach = value;
					this.SendPropertyChanged("Ten_Khach");
					this.OnTen_KhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Trang Thai]", Storage="_Trang_Thai", DbType="Bit NOT NULL")]
		public bool Trang_Thai
		{
			get
			{
				return this._Trang_Thai;
			}
			set
			{
				if ((this._Trang_Thai != value))
				{
					this.OnTrang_ThaiChanging(value);
					this.SendPropertyChanging();
					this._Trang_Thai = value;
					this.SendPropertyChanged("Trang_Thai");
					this.OnTrang_ThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Chiet Khau]", Storage="_Chiet_Khau", DbType="Float NOT NULL")]
		public double Chiet_Khau
		{
			get
			{
				return this._Chiet_Khau;
			}
			set
			{
				if ((this._Chiet_Khau != value))
				{
					this.OnChiet_KhauChanging(value);
					this.SendPropertyChanging();
					this._Chiet_Khau = value;
					this.SendPropertyChanged("Chiet_Khau");
					this.OnChiet_KhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ban", DbType="Int")]
		public System.Nullable<int> Ban
		{
			get
			{
				return this._Ban;
			}
			set
			{
				if ((this._Ban != value))
				{
					if (this._BAN1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBanChanging(value);
					this.SendPropertyChanging();
					this._Ban = value;
					this.SendPropertyChanged("Ban");
					this.OnBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHOADON", Storage="_CHITIETHOADONs", ThisKey="ID", OtherKey="Hoa_Don")]
		public EntitySet<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this._CHITIETHOADONs;
			}
			set
			{
				this._CHITIETHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_HOADON", Storage="_BAN1", ThisKey="Ban", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public BAN BAN1
		{
			get
			{
				return this._BAN1.Entity;
			}
			set
			{
				BAN previousValue = this._BAN1.Entity;
				if (((previousValue != value) 
							|| (this._BAN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAN1.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._BAN1.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._Ban = value.ID;
					}
					else
					{
						this._Ban = default(Nullable<int>);
					}
					this.SendPropertyChanged("BAN1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MON")]
	public partial class MON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Ten;
		
		private decimal _Gia;
		
		private System.Nullable<int> _Danh_Muc;
		
		private EntitySet<CHITIETHOADON> _CHITIETHOADONs;
		
		private EntityRef<DANHMUCMON> _DANHMUCMON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnDanh_MucChanging(System.Nullable<int> value);
    partial void OnDanh_MucChanged();
    #endregion
		
		public MON()
		{
			this._CHITIETHOADONs = new EntitySet<CHITIETHOADON>(new Action<CHITIETHOADON>(this.attach_CHITIETHOADONs), new Action<CHITIETHOADON>(this.detach_CHITIETHOADONs));
			this._DANHMUCMON = default(EntityRef<DANHMUCMON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Money NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Danh Muc]", Storage="_Danh_Muc", DbType="Int")]
		public System.Nullable<int> Danh_Muc
		{
			get
			{
				return this._Danh_Muc;
			}
			set
			{
				if ((this._Danh_Muc != value))
				{
					this.OnDanh_MucChanging(value);
					this.SendPropertyChanging();
					this._Danh_Muc = value;
					this.SendPropertyChanged("Danh_Muc");
					this.OnDanh_MucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MON_CHITIETHOADON", Storage="_CHITIETHOADONs", ThisKey="ID", OtherKey="Mon")]
		public EntitySet<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this._CHITIETHOADONs;
			}
			set
			{
				this._CHITIETHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUCMON_MON", Storage="_DANHMUCMON", ThisKey="Danh_Muc", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public DANHMUCMON DANHMUCMON
		{
			get
			{
				return this._DANHMUCMON.Entity;
			}
			set
			{
				DANHMUCMON previousValue = this._DANHMUCMON.Entity;
				if (((previousValue != value) 
							|| (this._DANHMUCMON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANHMUCMON.Entity = null;
						previousValue.MONs.Remove(this);
					}
					this._DANHMUCMON.Entity = value;
					if ((value != null))
					{
						value.MONs.Add(this);
						this._Danh_Muc = value.ID;
					}
					else
					{
						this._Danh_Muc = default(Nullable<int>);
					}
					this.SendPropertyChanged("DANHMUCMON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.MON1 = this;
		}
		
		private void detach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.MON1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Ho_Ten;
		
		private string _SDT;
		
		private System.DateTime _Sinh_Nhat;
		
		private string _Vi_Tri;
		
		private decimal _Luong_Ngay;
		
		private EntitySet<CHAMCONG> _CHAMCONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHo_TenChanging(string value);
    partial void OnHo_TenChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnSinh_NhatChanging(System.DateTime value);
    partial void OnSinh_NhatChanged();
    partial void OnVi_TriChanging(string value);
    partial void OnVi_TriChanged();
    partial void OnLuong_NgayChanging(decimal value);
    partial void OnLuong_NgayChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._CHAMCONGs = new EntitySet<CHAMCONG>(new Action<CHAMCONG>(this.attach_CHAMCONGs), new Action<CHAMCONG>(this.detach_CHAMCONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Ho Ten]", Storage="_Ho_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ho_Ten
		{
			get
			{
				return this._Ho_Ten;
			}
			set
			{
				if ((this._Ho_Ten != value))
				{
					this.OnHo_TenChanging(value);
					this.SendPropertyChanging();
					this._Ho_Ten = value;
					this.SendPropertyChanged("Ho_Ten");
					this.OnHo_TenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Sinh Nhat]", Storage="_Sinh_Nhat", DbType="DateTime NOT NULL")]
		public System.DateTime Sinh_Nhat
		{
			get
			{
				return this._Sinh_Nhat;
			}
			set
			{
				if ((this._Sinh_Nhat != value))
				{
					this.OnSinh_NhatChanging(value);
					this.SendPropertyChanging();
					this._Sinh_Nhat = value;
					this.SendPropertyChanged("Sinh_Nhat");
					this.OnSinh_NhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Vi Tri]", Storage="_Vi_Tri", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Vi_Tri
		{
			get
			{
				return this._Vi_Tri;
			}
			set
			{
				if ((this._Vi_Tri != value))
				{
					this.OnVi_TriChanging(value);
					this.SendPropertyChanging();
					this._Vi_Tri = value;
					this.SendPropertyChanged("Vi_Tri");
					this.OnVi_TriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Luong/Ngay]", Storage="_Luong_Ngay", DbType="Money NOT NULL")]
		public decimal Luong_Ngay
		{
			get
			{
				return this._Luong_Ngay;
			}
			set
			{
				if ((this._Luong_Ngay != value))
				{
					this.OnLuong_NgayChanging(value);
					this.SendPropertyChanging();
					this._Luong_Ngay = value;
					this.SendPropertyChanged("Luong_Ngay");
					this.OnLuong_NgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHAMCONG", Storage="_CHAMCONGs", ThisKey="ID", OtherKey="ID_NV")]
		public EntitySet<CHAMCONG> CHAMCONGs
		{
			get
			{
				return this._CHAMCONGs;
			}
			set
			{
				this._CHAMCONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHAMCONGs(CHAMCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CHAMCONGs(CHAMCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
		private bool _Admin;
		
		private bool _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAdminChanging(bool value);
    partial void OnAdminChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public TAIKHOAN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="Char(500) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin", DbType="Bit NOT NULL")]
		public bool Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Fn_ReportResult
	{
		
		private string _Ten;
		
		private decimal _Gia;
		
		private System.Nullable<int> _So_Luong;
		
		private System.Nullable<decimal> _Thanh_Tien;
		
		public Fn_ReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this._Ten = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Money NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this._Gia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_So_Luong", DbType="Int")]
		public System.Nullable<int> So_Luong
		{
			get
			{
				return this._So_Luong;
			}
			set
			{
				if ((this._So_Luong != value))
				{
					this._So_Luong = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thanh_Tien", DbType="Money")]
		public System.Nullable<decimal> Thanh_Tien
		{
			get
			{
				return this._Thanh_Tien;
			}
			set
			{
				if ((this._Thanh_Tien != value))
				{
					this._Thanh_Tien = value;
				}
			}
		}
	}
	
	public partial class Fn_ThongKeResult
	{
		
		private int _ID;
		
		private System.DateTime _Ngay;
		
		private string _Ten_Khach;
		
		private System.Nullable<double> _Tổng_Tiền;
		
		public Fn_ThongKeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this._Ngay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Ten Khach]", Storage="_Ten_Khach", DbType="NVarChar(50)")]
		public string Ten_Khach
		{
			get
			{
				return this._Ten_Khach;
			}
			set
			{
				if ((this._Ten_Khach != value))
				{
					this._Ten_Khach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tổng_Tiền", DbType="Float")]
		public System.Nullable<double> Tổng_Tiền
		{
			get
			{
				return this._Tổng_Tiền;
			}
			set
			{
				if ((this._Tổng_Tiền != value))
				{
					this._Tổng_Tiền = value;
				}
			}
		}
	}
	
	public partial class Fn_ThongKeLuongResult
	{
		
		private int _ID_NV;
		
		private string _Ho_Ten;
		
		private System.Nullable<int> _So_Ngay_Lam_Viec;
		
		private System.Nullable<decimal> _Luong;
		
		public Fn_ThongKeLuongResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ID NV]", Storage="_ID_NV", DbType="Int NOT NULL")]
		public int ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					this._ID_NV = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Ho Ten]", Storage="_Ho_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ho_Ten
		{
			get
			{
				return this._Ho_Ten;
			}
			set
			{
				if ((this._Ho_Ten != value))
				{
					this._Ho_Ten = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_So_Ngay_Lam_Viec", DbType="Int")]
		public System.Nullable<int> So_Ngay_Lam_Viec
		{
			get
			{
				return this._So_Ngay_Lam_Viec;
			}
			set
			{
				if ((this._So_Ngay_Lam_Viec != value))
				{
					this._So_Ngay_Lam_Viec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong", DbType="Money")]
		public System.Nullable<decimal> Luong
		{
			get
			{
				return this._Luong;
			}
			set
			{
				if ((this._Luong != value))
				{
					this._Luong = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
